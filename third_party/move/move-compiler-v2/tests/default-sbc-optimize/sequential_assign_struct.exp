============ initial bytecode ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo
     var $t2: m::Foo
     var $t3: m::Foo
     var $t4: m::Foo
     var $t5: m::Foo
     var $t6: m::Foo
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t4 := infer($t3)
  3: $t5 := infer($t4)
  4: $t6 := infer($t5)
  5: $t1 := infer($t6)
  6: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo [unused]
     var $t2: m::Foo [unused]
     var $t3: m::Foo [unused]
     var $t4: m::Foo [unused]
     var $t5: m::Foo [unused]
     var $t6: m::Foo [unused]
  0: return $t0
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {
struct Foo has copy {
	a: u64,
	b: u64,
	c: u64,
	d: u64,
	e: u64
}

sequential(Arg0: Foo): Foo /* def_idx: 0 */ {
B0:
	0: MoveLoc[0](Arg0: Foo)
	1: Ret
}
}
