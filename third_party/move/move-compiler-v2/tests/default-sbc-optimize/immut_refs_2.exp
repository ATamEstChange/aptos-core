
Diagnostics:
warning: Unused local variable `a`. Consider removing or prefixing with an underscore: `_a`
  ┌─ tests/default-sbc-optimize/immut_refs_2.move:4:13
  │
4 │         let a = &p;
  │             ^

============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t4 := infer($t0)
  3: $t5 := infer($t4)
  4: $t6 := infer($t5)
  5: $t1 := infer($t6)
  6: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64 [unused]
     var $t2: &u64 [unused]
     var $t3: &u64
     var $t4: u64
     var $t5: u64 [unused]
     var $t6: u64 [unused]
  0: $t3 := borrow_local($t0)
  1: drop($t3)
  2: $t4 := move($t0)
  3: return $t4
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test(Arg0: u64): u64 /* def_idx: 0 */ {
L0:	loc1: u64
B0:
	0: ImmBorrowLoc[0](Arg0: u64)
	1: StLoc[1](loc0: &u64)
	2: MoveLoc[1](loc0: &u64)
	3: Pop
	4: MoveLoc[0](Arg0: u64)
	5: StLoc[2](loc1: u64)
	6: MoveLoc[2](loc1: u64)
	7: Ret
}
}
