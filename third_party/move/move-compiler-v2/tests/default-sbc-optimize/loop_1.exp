============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: $t3 := 0
  1: $t2 := infer($t3)
  2: $t5 := 0
  3: $t4 := infer($t5)
  4: label L0
  5: $t7 := 10
  6: $t6 := <($t4, $t7)
  7: if ($t6) goto 8 else goto 14
  8: label L2
  9: $t2 := infer($t0)
 10: $t9 := 1
 11: $t8 := +($t4, $t9)
 12: $t4 := infer($t8)
 13: goto 16
 14: label L3
 15: goto 18
 16: label L4
 17: goto 4
 18: label L1
 19: $t1 := infer($t2)
 20: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64 [unused]
     var $t9: u64 [unused]
  0: $t3 := 0
  1: $t5 := 0
  2: label L0
  3: $t7 := 10
  4: $t6 := <($t5, $t7)
  5: if ($t6) goto 6 else goto 12
  6: label L2
  7: $t3 := copy($t0)
  8: $t7 := 1
  9: $t7 := +($t5, $t7)
 10: $t5 := move($t7)
 11: goto 14
 12: label L3
 13: goto 16
 14: label L4
 15: goto 2
 16: label L1
 17: return $t3
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test(Arg0: u64): u64 /* def_idx: 0 */ {
L0:	loc1: u64
L1:	loc2: u64
B0:
	0: LdU64(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u64)
B1:
	4: LdU64(10)
	5: StLoc[3](loc2: u64)
	6: CopyLoc[1](loc0: u64)
	7: MoveLoc[3](loc2: u64)
	8: Lt
	9: BrFalse(19)
B2:
	10: CopyLoc[0](Arg0: u64)
	11: StLoc[2](loc1: u64)
	12: LdU64(1)
	13: StLoc[3](loc2: u64)
	14: MoveLoc[1](loc0: u64)
	15: CopyLoc[3](loc2: u64)
	16: Add
	17: StLoc[1](loc0: u64)
	18: Branch(20)
B3:
	19: Branch(21)
B4:
	20: Branch(4)
B5:
	21: MoveLoc[2](loc1: u64)
	22: Ret
}
}
